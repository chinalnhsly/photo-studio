datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// 用户模型
model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  name      String
  role      Role      @default(USER)
  phone     String?   // 添加可选的电话字段
  avatar    String?   // 头像URL
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  orders    Order[]   // 添加订单关系
  bookings  Booking[] // 添加预约关系
}

// 角色枚举
enum Role {
  USER     // 普通用户
  STAFF    // 员工
  ADMIN    // 管理员
}

// 摄影套餐
model Package {
  id          Int       @id @default(autoincrement())
  name        String
  description String?
  price       Decimal   @db.Decimal(10, 2)
  duration    Int       // 拍摄时长(分钟)
  maxPhotos   Int       // 最大照片数
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  orders      Order[]
  bookings    Booking[]

  @@index([price])
  @@index([isActive])
}

// 订单
model Order {
  id        Int       @id @default(autoincrement())
  userId    Int
  packageId Int
  status    OrderStatus
  amount    Decimal   @db.Decimal(10, 2)
  paidAt    DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  package   Package   @relation(fields: [packageId], references: [id])
  booking   Booking?  
  photos    Photo[]   // 添加照片关系

  @@index([status])
  @@index([userId])
}

// 订单状态
enum OrderStatus {
  PENDING    // 待支付
  PAID       // 已支付
  CANCELLED  // 已取消
  COMPLETED  // 已完成
}

// 预约
model Booking {
  id        Int       @id @default(autoincrement())
  userId    Int
  packageId Int
  orderId   Int       @unique
  date      DateTime  // 预约日期
  timeSlot  String    // 时间段
  status    BookingStatus
  notes     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  package   Package   @relation(fields: [packageId], references: [id])
  order     Order     @relation(fields: [orderId], references: [id])

  @@index([date])
  @@index([status])
}

// 预约状态
enum BookingStatus {
  PENDING    // 待确认
  CONFIRMED  // 已确认
  CANCELLED  // 已取消
  COMPLETED  // 已完成
}

// 照片管理
model Photo {
  id        Int      @id @default(autoincrement())
  url       String   // 照片URL
  thumbnail String?  // 缩略图URL
  orderId   Int
  order     Order    @relation(fields: [orderId], references: [id]) // 添加订单关系
  type      PhotoType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orderId])
}

// 照片类型
enum PhotoType {
  ORIGINAL  // 原片
  PROCESSED // 精修片
}
